Team Ardent has performed work on a myriad of Government enterprise-scaled projects using Agile based development methodologies focused on processes highlighting change while accelerating delivery.  Using Microsoft Azure High-functioning CI/CD practices directly facilitate agile development because software change reaches production more frequently. As a result, stakeholders have more frequent opportunities to see demonstrations and provide feedback on change. Our CI/CD process focuses on software-defined life cycles highlighting the Azure tools that emphasize automation.

Team Ardent DevOps focuses on culture highlighting roles that emphasize engaged responsiveness. The intention of Team Ardent DevOps is to avoid the negative impact that stove-piped roles have on preventing rapid or effective response to issues. DevOps allows us to break down the barriers between Operations and Development by cross-training each team in the other’s skills. This approach improves everyone’s ability to appreciate and participate in each other’s tasks and leads to more high-quality collaboration and more frequent communication. By extension, DevSecOps highlights the often-neglected aspect of security across the development pipeline. Much is said about automation, collaboration and other core pillars of all DevOps methodologies, and in the process, security is usually an afterthought. DevSecOps doesn’t necessitate a separate security team, but embeds security principles at every step, and into every collaborator, including developers and QA. It requires developers to follow security best practices when collaborating from GitHub repositories. This includes running automated “dry run” tests before committing new code. The QA team should include automated security checks as part of the build automation process so that bad code is stopped before it gets out into production. Establishing an immediate feedback loop between dev and test is key to realizing the benefits of moving software testing earlier in its lifecycle to prevent defects early in the software delivery process. This process is a key function of the shift-left strategy and up-front threat assessment models.

Our experience in automation activities using Azure Security Center include deployment, monitoring and alerting.  Using Azure Security Center ensures we are following established best-practices that allow for rapid control and monitoring of common issues with IaaS and PaaS resources. Security Center provides in depth defense with the ability to both detect and help protect against threats. Using machine learning to process signals across Microsoft services and systems, Security Center alerts to threats to the environments, such as remote desktop protocol (RDP) brute-force attacks and SQL injections and provides actionable recommendations for mitigating these threats.  Additional tools such as Azure Monitor, Log Analytics and Application Insights provide enhance collaborative capabilities for monitoring and alerting.
Incorporating tools such as Artifactory as a solution for a fully automated pipeline for distributing trusted software releases ensures software flows quickly and free from interruption.   BitBucket and GitHub provide a collaborative platform for the development team to plan, code, test and deploy at scale.  BitBucket Pipeline capabilities integrate CI/CD to automate code from test to production and integrates seamlessly with Jira/Confluence and other DI2E tools used by organizations across the USAF.

Azure Data Factory service is implemented as a fully managed service for composing data storage, processing, and movement services into streamlined, scalable, and reliable data production pipelines. This permits the Integration of data silos with Azure Data Factory for the construction of ETL and ELT processes code-free. Azure data factory is used primarily to Ingest, move, prepare, transform, and process the data and complete any required data modeling.  This integrates with the previous capabilities of Azure Monitor and aligns well with our established DevOps processes.

Microservices are deployed as Azure Functions. Azure Functions allows developers to establish connections to data sources or messaging solutions simplifying the process and the ability to react to events. ILW has developed Azure Functions to build HTTP-based API endpoints accessible by a wide range of applications, mobile and IoT devices. 
